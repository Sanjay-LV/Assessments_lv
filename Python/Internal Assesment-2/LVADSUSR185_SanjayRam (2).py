# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w04wFCABUFWLSne-CX6fHwqi_0mqfZNx
"""



"""LAB SECTION-1"""

#Qn 1:
import numpy as np
arr = np.array([1,2,3,4,5])
mini_arr = np.min(arr)
maxi_arr = np.max(arr)
sum_arr = np.sum(arr)
mean_arr = np.mean(arr)
std_arr = np.std(arr)
print(mini_arr,maxi_arr,sum_arr,mean_arr,std_arr)

#Qn 2:
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
mean_of_3_indiv = np.mean(health_data,axis=1)
std_of_3_indiv = np.std(health_data,axis=1)
norm = (health_data[0]-mean_of_3_indiv[0])/(std_of_3_indiv[0])
norm_2 = (health_data[1]-mean_of_3_indiv[1])/(std_of_3_indiv[1])
norm_3 = (health_data[2]-mean_of_3_indiv[2])/(std_of_3_indiv[2])
print(norm,norm_2,norm_3)

#Qn 3:
# 2 students with 5 subject grades  each
students = np.array([[80,88,89,90,91],[89,98,90,92,92]])
stud_last_3 = students[:,2:]
avg_scores = np.mean(stud_last_3,axis=0)
avg_scores

#Qn 4:
temp_arr = np.linspace(15,25,num=24)
print(temp_arr)

#Qn 5:
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
df = pd.DataFrame(daily_closing_prices)
print(df[0].rolling(window=window_size))

#Qn 6:
arr = np.random.random((3,3))
mean = np.array([0,0])
covar = np.array([1,0.5],[0.5,2])

#Qn 7:
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
determinant_matrix = np.linalg.det(properties_matrix)
determinant_matrix

#Qn 8:
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
condition = properties_matrix>5
arr = properties_matrix[condition]
arr_1 = np.where(properties_matrix[condition])
print(arr)
print(arr_1)

#Qn 9:
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

df = pd.DataFrame(data)
df_new = df[['Name','City']][df['Age']<45][df['Department']!='HR']
df_new

#Qn 10:
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

df = pd.DataFrame(data)
df_grp = df.groupby(['Department','Salesperson'])['Sales'].mean().reset_index()
df_grp_new = df_grp.groupby(['Department'])['Sales'].mean().reset_index()
print(df_grp)
sorted_df = df_grp_new.sort_values(by='Sales',ascending=False)
print(sorted_df)

#Qn 11:
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

df = pd.DataFrame(data)
new_df = df[[df['Category']=="Fruit" & df['Promotion']==False] & df['Price']>(df[df['Category']==Fruit & df['Price'].mean()])]

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df_1 = pd.DataFrame(employee_data)
df_2 = pd.DataFrame(project_data)
merged_df = pd.merge(df_1,df_2,on="Employee",how="outer")
merged_df

#Qn 13:
#data loading
import pandas as pd
df_1 = pd.read_csv("/content/Q13_sports_team_stats.csv")
df_1['Win_ratio'] = df_1['Wins']/df_1['GamesPlayed']
df_avg_score = df_1.groupby(['TeamID']).mean().reset_index()
df_avg_score

#Qn 14:
df_2 = pd.read_csv("/content/Q14_customer_purchases.csv")
df_2['Date'] = pd.to_datetime(df_2['Date'])
df_2['LoyaltyProgramSignUp'] = pd.to_datetime(df_2['LoyaltyProgramSignUp'])
df_2['day'] = df_2['Date'].dt.day_of_year
df_2['Day_loy'] = df_2['LoyaltyProgramSignUp'].dt.day_of_year

df_2['diff'] = df_2['day']-df_2['Day_loy']
df_2
df_before_after = df_2.groupby(['diff'])['PurchaseAmount'].sum()
df_before_after

#Qn 15:
df_3 = pd.read_csv("/content/Q15_student_grades.csv")
df_3

df_new = df_3.groupby(['Subject','StudentID'])['Grade'].mean().reset_index()
print(df_new)
df_new_sub = df_new.groupby(['Subject']).mean().reset_index()
print(df_new_sub)
df_new_sub_sorted = df_new_sub.sort_values(by="Grade",ascending=False)
print(df_new_sub_sorted)
# Improvement areas-In history subject and math subject